#!/usr/bin/env bash
# Change GDM Background on Ubuntu 20.04 and above.
# By Manish Singh Parmar Â© 2020
# Contact: ManishOnLinux@gmail.com
# 
# =================================================================== #

# Check if script is run by root.
if [ "$(id -u)" -ne 0 ] ; then
    echo 'You need to be an Administrator to run this Script.'
    exit 1
fi

if [ ! "$(lsb_release -c | cut -f 2)" == focal ]; then
    echo 'This script only works with Ubuntu 20.04 and above....Exiting.'
    exit 1
fi

# Check if glib 2.0 development libraries are installed.
if [ ! -x "$(command -v glib-compile-resources)" ]; then
    echo 'Additional glib 2.0 libraries need to be installed.'
    read -p 'Type y or Y to proceed. Any other key to exit: ' -n 1
    if [[ "$REPLY" =~ ^[yY]$ ]]; then
	apt install libglib2.0-dev-bin
    else
	echo
	exit 1
    fi
fi

# Assign the default gdm theme file path.
gdm3Resource=/usr/share/gnome-shell/theme/Yaru/gnome-shell-theme.gresource

# Create a backup file of the original theme if there isn't one.
[ ! -f "$gdm3Resource"~ ] && cp "$gdm3Resource" "$gdm3Resource~"

# Restore backup function.
restore () {
mv "$gdm3Resource~" "$gdm3Resource"
if [ "$?" -eq 0 ]; then
    chmod 644 "$gdm3Resource"
    echo 'Default GDM Restored Successfully!.'
    echo 'Kindly Restart Gnome Session OR Reboot to apply changes.'
    exit 0
fi
}

# To Restore the original gdm3 theme.
[ "$1" == "--restore" ] && restore

# Test if argument is an image file.
if [[ $(file --mime-type -b "$1") == image/*g ]]; then

    # Defining more variables.
    gdm3xml=$(basename "$gdm3Resource").xml
    workDir="/tmp/gdm3-theme"
    gdmBgImg=$(realpath "$1")
    imgFile=$(basename "$gdmBgImg")

    # Creating directories from resource list.
    for resource in `gresource list "$gdm3Resource~"`; do
	resource="${resource#\/org\/gnome\/shell\/}"
	if [ ! -d "$workDir"/"${resource%/*}" ]; then
	  mkdir -p "$workDir"/"${resource%/*}"
	fi
    done

    # Extract resources from binary file.
    for resource in `gresource list "$gdm3Resource~"`; do
	gresource extract "$gdm3Resource~" "$resource" > \
	"$workDir"/"${resource#\/org\/gnome\/shell\/}"
    done

    # Copy selected image to the resources directory.
    cp "$gdmBgImg" "$workDir"/theme

    # Change gdm background to the user-defined image.
    oldImg="#lockDialogGroup \{.*?\}"
    newImg="#lockDialogGroup {
	background: url('resource:\/\/\/org\/gnome\/shell\/theme\/$imgFile');
	background-size: cover; }"
    perl -i -0777 -pe "s/$oldImg/$newImg/s" "$workDir"/theme/gdm3.css

    # Generate gresource xml file.
    echo '<?xml version="1.0" encoding="UTF-8"?>
<gresources>
    <gresource prefix="/org/gnome/shell/theme">' > "$workDir"/theme/"$gdm3xml"
    for file in `gresource list "$gdm3Resource~"`; do
	echo "        <file>${file#\/org\/gnome/shell\/theme\/}</file>" \
	>> "$workDir"/theme/"$gdm3xml"
    done
    echo "        <file>$imgFile</file>" >> "$workDir"/theme/"$gdm3xml"
    echo '    </gresource>
</gresources>' >> "$workDir"/theme/"$gdm3xml"

    # Compile resources into a gresource binary file.
    glib-compile-resources --sourcedir=$workDir/theme/ $workDir/theme/"$gdm3xml"

    # Move the generated binary file to the gnome-shell folder.
    mv $workDir/theme/gnome-shell-theme.gresource $gdm3Resource

    # Check if gresource was sucessfuly moved to its default folder.
    if [ "$?" -eq 0 ]; then
    # Solving a permission change issue.
	chmod 644 "$gdm3Resource"
	echo 'GDM background sucessfully changed.'
	echo 'This Script is created by Manish Singh Parmar'
	read -p 'Do you want to restart gdm to apply change? (y/n):' -n 1
	echo
	if [ "$REPLY" == "y" ]; then
	    service gdm restart
	fi
    else
	echo 'something went wrong.'
	restore
	echo 'No changes were applied.'
    fi

    # Removing temporary directories and files.
    rm -r "$workDir"

else

    # If no file was defined by user or file submited isn't an image show this message.
    echo 'No Image provided.'
    echo 'Please, submit a .jpg or .png image file.'
    echo 'Usage: sudo ./ubuntu-gdm /path/to/image.*g'

fi
